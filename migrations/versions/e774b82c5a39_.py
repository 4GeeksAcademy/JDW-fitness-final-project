"""empty message

Revision ID: e774b82c5a39
Revises: dc40faaac63d
Create Date: 2024-06-04 10:56:38.379466

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e774b82c5a39'
down_revision = 'dc40faaac63d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('diseases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kind', sa.String(length=120), nullable=False),
    sa.Column('sintoms', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('kind')
    )
    op.create_table('education',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rank', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experience',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('time')
    )
    op.create_table('activity_frequency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mode', sa.String(length=120), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mode')
    )
    op.drop_table('availability_coach')
    with op.batch_alter_table('availability', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['day'])

    with op.batch_alter_table('client', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('first_name', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('last_name', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('age', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('height', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('weight', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('gender', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('physical_habits', sa.String(length=120), nullable=True))
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=180),
               type_=sa.String(length=80),
               nullable=False)
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.create_unique_constraint(None, ['username'])

    with op.batch_alter_table('coach', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=120), nullable=False))
        batch_op.add_column(sa.Column('first_name', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('last_name', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('education_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('experience_id', sa.Integer(), nullable=True))
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=180),
               type_=sa.String(length=80),
               nullable=False)
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.create_foreign_key(None, 'experience', ['experience_id'], ['id'])
        batch_op.create_foreign_key(None, 'education', ['education_id'], ['id'])

    with op.batch_alter_table('goals', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['kind'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('goals', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('coach', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('password',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=180),
               nullable=True)
        batch_op.drop_column('experience_id')
        batch_op.drop_column('education_id')
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')
        batch_op.drop_column('username')

    with op.batch_alter_table('client', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('password',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=180),
               nullable=True)
        batch_op.drop_column('physical_habits')
        batch_op.drop_column('gender')
        batch_op.drop_column('weight')
        batch_op.drop_column('height')
        batch_op.drop_column('age')
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')
        batch_op.drop_column('username')

    with op.batch_alter_table('availability', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    op.create_table('availability_coach',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('availability_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('coach_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['availability_id'], ['availability.id'], name='availability_coach_availability_id_fkey'),
    sa.ForeignKeyConstraint(['coach_id'], ['coach.id'], name='availability_coach_coach_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='availability_coach_pkey')
    )
    op.drop_table('activity_frequency')
    op.drop_table('experience')
    op.drop_table('education')
    op.drop_table('diseases')
    # ### end Alembic commands ###
